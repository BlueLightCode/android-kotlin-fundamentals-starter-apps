<?xml version="1.0" encoding="utf-8"?>
<!-- You can't make comments inside of tags

    - "match_parent" for layout_width sets the width to be equal to it's parent
        object.  In this case, it's the root object, which is the device's width

    - "wrap_content" will adjust the length value to whatever is required for
        the text.

    - layout_gravity attribute moves an element.

    - id="@+id/" allows you to follow id/ with the reference name for a view.
        Once you set the id, you can then call it from the R class in kotlin.
        Specifically you need to call the findViewById(), and provide it with the
        argument of "R.id.(elementId)"

    * You can use the tools name space (nameSpace:viewAttribute), to set up values
        you can see in the preview tab.

    - Be sure you put your tool namespace stuff WITHIN the views

    * app namespace is for code that isn't from an app's own libraries or android's
        core frame work.  Think of it like importing a special library of attributes
        just for some special task, in this case it's for shrinking the dice's
        compatibility format versions from PNGs to a file type that's not as big.
 -->
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"

    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    tools:context=".MainActivity"
    android:layout_gravity="center_vertical"
    android:orientation="vertical">

    <ImageView
        android:id="@+id/dice_image"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center_horizontal"
        app:srcCompat="@drawable/empty_dice"
        tools:src="@drawable/dice_1"
        />

    <Button
        android:id="@+id/roll_button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center_horizontal"
        android:text="@string/roll"
        />
</LinearLayout>